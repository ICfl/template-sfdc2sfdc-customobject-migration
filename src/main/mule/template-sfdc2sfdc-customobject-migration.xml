<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd 
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="8c32e813-82b9-416c-b91d-441765e09cce" >
		<http:listener-connection host="0.0.0.0" port="${http.port}" />
	</http:listener-config>
	<salesforce:sfdc-config name="Salesforce_Sfdc_configA" doc:name="Salesforce Sfdc config" doc:id="e1501d69-64e5-4c89-9bdd-9afdc8153313" >
		<salesforce:basic-connection username="${sfdc.a.username}" password="${sfdc.a.password}" securityToken="${sfdc.a.securityToken}" />
	</salesforce:sfdc-config>
	<salesforce:sfdc-config name="Salesforce_Sfdc_configB" doc:name="Salesforce Sfdc config" doc:id="776df715-7853-4aa0-85d6-cdacd81c6f53" >
		<salesforce:basic-connection username="${sfdc.b.username}" password="${sfdc.b.password}" securityToken="${sfdc.b.securityToken}" />
	</salesforce:sfdc-config>
	<email:smtp-config name="Email_SMTPS" doc:name="Email SMTP" doc:id="efb4579d-b9fa-4f54-8036-2356f07b7ff4" >
		<email:smtps-connection host="${smtp.host}" port="${smtp.port}" user="${smtp.user}" password="${smtp.password}" tlsContext="TLS_Context" />
	</email:smtp-config>
	<tls:context name="TLS_Context" doc:name="TLS Context" doc:id="f2135468-7efa-4e92-a191-eaca88df39f2" >
		<tls:trust-store insecure="true" />
	</tls:context>
	
	<configuration-properties doc:name="Configuration properties" doc:id="7584fb1d-2fa2-445a-b949-eed01f5785bd" file="common.properties" />
	<configuration-properties doc:name="Configuration properties" doc:id="86e0eb9d-cf2e-451a-9e09-b4afdf13e0e9" file="mule.dev.properties" />
	<flow name="template-sfdc2sfdc-customobject-migrationFlow" doc:id="1ae8c770-cb85-4985-adbd-bd95e41c7be6" >
		<http:listener doc:name="Start CustomObjects synchronization" doc:id="ca1efe4f-1e53-428a-b439-c1d905246a34" config-ref="HTTP_Listener_config" path="/migratecustomobjects"/>
		<salesforce:query doc:name="Query CustomObjects from Salesforce instance A" doc:id="e9bd176e-400b-40ef-a018-7ae8d1b77765" config-ref="Salesforce_Sfdc_configA">
			<salesforce:salesforce-query >SELECT Name, LastModifiedDate, interpreter__c, year__c FROM MusicAlbum__c WHERE year__c &gt; :year</salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output applicaton/java
---
{
	"year" : 1968
}]]]></salesforce:parameters>
		</salesforce:query>
		<batch:job jobName="template-sfdc2sfdc-customobject-migrationBatch_Job" doc:id="64a18748-28ff-49fc-9459-8847449a3057" >
			<batch:process-records >
				<batch:step name="getCustomObjectInBStep" doc:id="83e36ee1-fa85-41b5-bf45-ef179401157b" >
					<salesforce:query-single doc:name="Query customObject in Salesforce instance B" doc:id="90e78f6b-97b8-4284-adb2-8b65f6ac64a2" config-ref="Salesforce_Sfdc_configB" target="objectInB">
						<salesforce:salesforce-query >SELECT Id FROM MusicAlbum__c WHERE Name = ':name'</salesforce:salesforce-query>
						<salesforce:parameters ><![CDATA[#[output applicaton/java
---
{
	"name" : payload.Name
}]]]></salesforce:parameters>
					</salesforce:query-single>
					<ee:transform doc:name="Enrich payload with ID" doc:id="2d0faf0d-8ffb-4313-9b24-04c84fc7e9f3" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload ++ vars.objectInB]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</batch:step>
				<batch:step name="createCustomObjectsInBStep" doc:id="25002f0d-fefe-4b2a-b1e2-1518aea7929c" acceptExpression="payload != null">
					<batch:aggregator doc:name="Batch Aggregator" doc:id="00d87943-9e0b-4f3d-a7e9-76d510d43b2d" size="200">
						<ee:transform doc:name="Prepare customObjects for upsert" doc:id="dd0ea23c-ff0a-401a-bcc1-2a099bf71648" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map {
	Id: $.Id,
	Name: $.Name,
	interpreter__c: $.interpreter__c
	// TODO - Here you should remove all custom fields that don't exist in the target system and map the ones that vary in type/format
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<logger level="INFO" doc:name="Log CustomObjects for upsert" doc:id="43dc44f8-086e-415d-a8e4-7311d2bf82ff" message="#['CustomObjects for upsert: ' ++ write(payload,'application/json')]"/>
						<salesforce:upsert type="MusicAlbum__c" doc:name="Upsert CustomObjects in org B" doc:id="0c5c37ab-7d09-49e5-a639-2c39bbeacbf5" config-ref="Salesforce_Sfdc_configB" externalIdFieldName="Id"/>
					</batch:aggregator>
				</batch:step>
			</batch:process-records>
			<batch:on-complete >
				<scatter-gather doc:name="Scatter-Gather" doc:id="18973fc2-6815-4898-ba04-56bbb0d9c760" >
					<route >
						<logger level="INFO" doc:name="Log 'Migration process has finished'" doc:id="6ab6e815-91ba-4ac0-b83d-ca0c381c1db7" message="#['Migration process has finished: ' ++ write(payload,'application/json')]"/>
					</route>
					<route >
						<email:send doc:name="Send email with report" doc:id="edd536c6-d432-44f1-aa00-14599dbfa134" config-ref="Email_SMTPS" fromAddress="${mail.from}" subject="${mail.subject}">
							<email:to-addresses >
								<email:to-address value="${mail.to}" />
							</email:to-addresses>
							<email:body contentType="text/plain">
								<email:content ><![CDATA[#["Migration Report: \n"
 
++ "\n Time [milliseconds]: " 		++ payload.elapsedTimeInMillis
++ "\n Total Records: "				++ payload.totalRecords
++ "\n Successful Records: "		++ payload.successfulRecords
++ "\n Failed Records: "			++ payload.failedRecords
++ "\n Loaded Records: "			++ payload.loadedRecords
++ "\n Processed Records: " 		++ payload.processedRecords]]]></email:content>
							</email:body>
						</email:send>
					</route>
				</scatter-gather>
			</batch:on-complete>
		</batch:job>
		<set-payload value="#['&lt;h1&gt;Batch Process initiated&lt;/h1&gt;&lt;b&gt;ID:&lt;/b&gt;' ++ payload.id ++ '&lt;br/&gt;&lt;b&gt;Records to Be Processed: &lt;/b&gt;' ++ payload.recordCount ++ '&lt;br/&gt; &lt;b&gt;Start execution on: &lt;/b&gt;' ++ now()]" doc:name="Set batch status to response" doc:id="bc5bdc70-89f4-4e51-97ed-09cf3122a005" mimeType="text/html"/>
	</flow>

	
</mule>
